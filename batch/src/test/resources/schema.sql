-- Autogenerated: do not edit this file
CREATE TABLE BATCH_JOB_INSTANCE  (
	JOB_INSTANCE_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT ,
	JOB_NAME VARCHAR(100) NOT NULL,
	JOB_KEY VARCHAR(32) NOT NULL,
	constraint JOB_INST_UN unique (JOB_NAME, JOB_KEY)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION  (
	JOB_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT  ,
	JOB_INSTANCE_ID BIGINT NOT NULL,
	CREATE_TIME DATETIME(6) NOT NULL,
	START_TIME DATETIME(6) DEFAULT NULL ,
	END_TIME DATETIME(6) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME(6),
	JOB_CONFIGURATION_LOCATION VARCHAR(2500) NULL,
	constraint JOB_INST_EXEC_FK foreign key (JOB_INSTANCE_ID)
	references BATCH_JOB_INSTANCE(JOB_INSTANCE_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION_PARAMS  (
	JOB_EXECUTION_ID BIGINT NOT NULL ,
	TYPE_CD VARCHAR(6) NOT NULL ,
	KEY_NAME VARCHAR(100) NOT NULL ,
	STRING_VAL VARCHAR(250) ,
	DATE_VAL DATETIME(6) DEFAULT NULL ,
	LONG_VAL BIGINT ,
	DOUBLE_VAL DOUBLE PRECISION ,
	IDENTIFYING CHAR(1) NOT NULL ,
	constraint JOB_EXEC_PARAMS_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION  (
	STEP_EXECUTION_ID BIGINT  NOT NULL PRIMARY KEY ,
	VERSION BIGINT NOT NULL,
	STEP_NAME VARCHAR(100) NOT NULL,
	JOB_EXECUTION_ID BIGINT NOT NULL,
	START_TIME DATETIME(6) NOT NULL ,
	END_TIME DATETIME(6) DEFAULT NULL ,
	STATUS VARCHAR(10) ,
	COMMIT_COUNT BIGINT ,
	READ_COUNT BIGINT ,
	FILTER_COUNT BIGINT ,
	WRITE_COUNT BIGINT ,
	READ_SKIP_COUNT BIGINT ,
	WRITE_SKIP_COUNT BIGINT ,
	PROCESS_SKIP_COUNT BIGINT ,
	ROLLBACK_COUNT BIGINT ,
	EXIT_CODE VARCHAR(2500) ,
	EXIT_MESSAGE VARCHAR(2500) ,
	LAST_UPDATED DATETIME(6),
	constraint JOB_EXEC_STEP_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION_CONTEXT  (
	STEP_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint STEP_EXEC_CTX_FK foreign key (STEP_EXECUTION_ID)
	references BATCH_STEP_EXECUTION(STEP_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_JOB_EXECUTION_CONTEXT  (
	JOB_EXECUTION_ID BIGINT NOT NULL PRIMARY KEY,
	SHORT_CONTEXT VARCHAR(2500) NOT NULL,
	SERIALIZED_CONTEXT TEXT ,
	constraint JOB_EXEC_CTX_FK foreign key (JOB_EXECUTION_ID)
	references BATCH_JOB_EXECUTION(JOB_EXECUTION_ID)
) ENGINE=InnoDB;

CREATE TABLE BATCH_STEP_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_STEP_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_STEP_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_EXECUTION_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_JOB_EXECUTION_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_EXECUTION_SEQ);

CREATE TABLE BATCH_JOB_SEQ (
	ID BIGINT NOT NULL,
	UNIQUE_KEY CHAR(1) NOT NULL,
	constraint UNIQUE_KEY_UN unique (UNIQUE_KEY)
) ENGINE=InnoDB;

INSERT INTO BATCH_JOB_SEQ (ID, UNIQUE_KEY) select * from (select 0 as ID, '0' as UNIQUE_KEY) as tmp where not exists(select * from BATCH_JOB_SEQ);

CREATE SCHEMA IF NOT EXISTS schedulerdb;
-- -----------------------------------------------------
-- Table `schedulerdb`.`user`
-- -----------------------------------------------------
create table schedulerdb.user
(
    id              int          auto_increment comment 'ID',
    login_id        varchar(45)  not null comment '로그인 아이디',
    password        varchar(100) not null comment '비밀번호',
    name            varchar(45)  null comment '이름',
    phone_number    varchar(15)  null comment '휴대폰 번호',
    token_key       varchar(100) null comment 'Token',
    status          varchar(10)  null comment '사용자 상태 ( ENABLE , DISABLE , DELETE )',
    create_datetime datetime     null comment '생성 시간',
    modify_datetime datetime     null comment '수정 시간'
);

alter table schedulerdb.user
    add primary key (id);


-- -----------------------------------------------------
-- Table `schedulerdb`.`scheduler`
-- -----------------------------------------------------
create table schedulerdb.scheduler
(
    id              int                    auto_increment comment 'ID',
    user_id         int                    not null,
    date            varchar(8)             null comment '날짜',
    date_year       varchar(4)             null comment '년',
    date_month      varchar(2)             null comment '월',
    date_day        varchar(2)             null comment '일',
    time            varchar(8)             null comment '시간',
    time_hour       varchar(2)             null comment '시',
    time_min        varchar(2)             null comment '분',
    is_alarm        TINYINT(1) default 0 null comment '알람 허용 여부 ( 1: 알림 허용 , 0 : 알림 미허용 )',
    alarm_type      varchar(45)            null comment '알람 울림 시간 타입',
    alarm_time      varchar(45)            null comment '알람까지 시간',
    is_repeat       TINYINT(1) default 0 null comment '반복 여부 ( 1 : 반복  ,  0 : 미반복 )',
    repeat_type     varchar(10)            null comment '반복 타입',
    is_holiday      TINYINT(1) default 0 null comment '공휴일 제외 여부 ( 1 : 제외 , 0 : 미제외)',
    memo            LONGTEXT               null,
    create_datetime datetime               null,
    modify_datetime datetime               null,
    constraint fk_scheduler_user
        foreign key (user_id) references schedulerdb.user (id)
);

alter table schedulerdb.scheduler
    add primary key (id);

-- -----------------------------------------------------
-- Table `schedulerdb`.`holiday`
-- -----------------------------------------------------
create table schedulerdb.holiday
(
    id              int auto_increment,
    name            varchar(45)            null comment '공휴일명',
    memo            varchar(100)           null comment '공휴일 내용',
    date            varchar(8)             null comment '날짜',
    date_year       varchar(4)             null,
    date_month      varchar(2)             null,
    date_day        varchar(2)             null,
    is_common       TINYINT(1) default 0 null comment '공통 공휴일( 1 : 공통 공휴일 , 0 : 특정 사용자 공휴일 )',
    user_id         int                    null,
    create_datetime datetime               null,
    modify_datetime datetime               null
);

alter table schedulerdb.holiday
    add primary key (id);




create table schedulerdb.sample_user
(
    id           int auto_increment,
    name         varchar(40) null,
    phone_number varchar(15) null,
    constraint sample_user_id_uindex
        unique (id)
);

alter table schedulerdb.sample_user
    add primary key (id);

